module(
    name = "rules_rust",
    version = "0.20.0",
)

print("WARNING: The rules_rust Bazel module is still highly experimental and subject to change at any time. Only use it to try out bzlmod for now.")  # buildifier: disable=print

bazel_dep(name = "platforms", version = "0.0.5")
bazel_dep(name = "rules_cc", version = "0.0.1")
bazel_dep(name = "bazel_skylib", version = "1.2.0")
bazel_dep(
    name = "apple_support",
    version = "1.3.1",
    repo_name = "build_bazel_apple_support",
)

internal_deps = use_extension("//rust/private/module_extensions:internal_deps.bzl", "internal_deps")
use_repo(
    internal_deps,
    "rules_rust_tinyjson",
    # All entries from //tools/rust_analyzer/3rdparty/crates:defs.bzl.
    "rules_rust_rust_analyzer__aho-corasick-0.7.20",
    "rules_rust_rust_analyzer__anyhow-1.0.68",
    "rules_rust_rust_analyzer__atty-0.2.14",
    "rules_rust_rust_analyzer__autocfg-1.1.0",
    "rules_rust_rust_analyzer__bitflags-1.3.2",
    "rules_rust_rust_analyzer__cfg-if-1.0.0",
    "rules_rust_rust_analyzer__clap-3.2.23",
    "rules_rust_rust_analyzer__clap_derive-3.2.18",
    "rules_rust_rust_analyzer__clap_lex-0.2.4",
    "rules_rust_rust_analyzer__either-1.8.0",
    "rules_rust_rust_analyzer__env_logger-0.9.3",
    "rules_rust_rust_analyzer__hashbrown-0.12.3",
    "rules_rust_rust_analyzer__heck-0.4.0",
    "rules_rust_rust_analyzer__hermit-abi-0.1.19",
    "rules_rust_rust_analyzer__humantime-2.1.0",
    "rules_rust_rust_analyzer__indexmap-1.9.2",
    "rules_rust_rust_analyzer__itertools-0.10.5",
    "rules_rust_rust_analyzer__itoa-1.0.5",
    "rules_rust_rust_analyzer__libc-0.2.139",
    "rules_rust_rust_analyzer__log-0.4.17",
    "rules_rust_rust_analyzer__memchr-2.5.0",
    "rules_rust_rust_analyzer__once_cell-1.17.0",
    "rules_rust_rust_analyzer__os_str_bytes-6.4.1",
    "rules_rust_rust_analyzer__proc-macro-error-1.0.4",
    "rules_rust_rust_analyzer__proc-macro-error-attr-1.0.4",
    "rules_rust_rust_analyzer__proc-macro2-1.0.49",
    "rules_rust_rust_analyzer__quote-1.0.23",
    "rules_rust_rust_analyzer__regex-1.7.0",
    "rules_rust_rust_analyzer__regex-syntax-0.6.28",
    "rules_rust_rust_analyzer__ryu-1.0.12",
    "rules_rust_rust_analyzer__serde-1.0.152",
    "rules_rust_rust_analyzer__serde_derive-1.0.152",
    "rules_rust_rust_analyzer__serde_json-1.0.91",
    "rules_rust_rust_analyzer__strsim-0.10.0",
    "rules_rust_rust_analyzer__syn-1.0.107",
    "rules_rust_rust_analyzer__termcolor-1.1.3",
    "rules_rust_rust_analyzer__textwrap-0.16.0",
    "rules_rust_rust_analyzer__unicode-ident-1.0.6",
    "rules_rust_rust_analyzer__version_check-0.9.4",
    "rules_rust_rust_analyzer__winapi-0.3.9",
    "rules_rust_rust_analyzer__winapi-i686-pc-windows-gnu-0.4.0",
    "rules_rust_rust_analyzer__winapi-util-0.1.5",
    "rules_rust_rust_analyzer__winapi-x86_64-pc-windows-gnu-0.4.0",
)

# This is the default host tools configuration, but if a user defines it in
# their repo, it's overridden.
rust = use_extension("//rust:extensions.bzl", "rust")
rust.host_tools(
    edition = "2021",
)
use_repo(
    rust,
    "rust_host_tools",
    "rust_analyzer_1.68.1_tools",
)

cargo_bazel_bootstrap = use_extension("//crate_universe/private/module_extensions:cargo_bazel_bootstrap.bzl", "cargo_bazel_bootstrap")
use_repo(
    cargo_bazel_bootstrap,
    "cargo_bazel_bootstrap",
)
